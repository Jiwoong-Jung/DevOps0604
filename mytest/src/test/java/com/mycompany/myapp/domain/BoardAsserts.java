package com.mycompany.myapp.domain;

import static com.mycompany.myapp.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class BoardAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardAllPropertiesEquals(Board expected, Board actual) {
        assertBoardAutoGeneratedPropertiesEquals(expected, actual);
        assertBoardAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardAllUpdatablePropertiesEquals(Board expected, Board actual) {
        assertBoardUpdatableFieldsEquals(expected, actual);
        assertBoardUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardAutoGeneratedPropertiesEquals(Board expected, Board actual) {
        assertThat(expected)
            .as("Verify Board auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardUpdatableFieldsEquals(Board expected, Board actual) {
        assertThat(expected)
            .as("Verify Board relevant properties")
            .satisfies(e -> assertThat(e.getTitle()).as("check title").isEqualTo(actual.getTitle()))
            .satisfies(e -> assertThat(e.getCategory()).as("check category").isEqualTo(actual.getCategory()))
            .satisfies(
                e ->
                    assertThat(e.getCreatedAt())
                        .as("check createdAt")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getCreatedAt())
            )
            .satisfies(e -> assertThat(e.getCreatedBy()).as("check createdBy").isEqualTo(actual.getCreatedBy()))
            .satisfies(
                e ->
                    assertThat(e.getModifiedAt())
                        .as("check modifiedAt")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getModifiedAt())
            )
            .satisfies(e -> assertThat(e.getModifiedBy()).as("check modifiedBy").isEqualTo(actual.getModifiedBy()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertBoardUpdatableRelationshipsEquals(Board expected, Board actual) {}
}
